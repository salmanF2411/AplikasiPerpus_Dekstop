package AplikasiPerpus;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import javax.swing.table.TableColumn;
import javax.swing.JFrame; 

public class JFramRoleUser extends javax.swing.JFrame {

    public DefaultTableModel model;
    String rool_id = "";

    /**
     * Creates new form JFramRoleUser
     */
    public JFramRoleUser() {
        initComponents();
        HeaderTable();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    public void HeaderTable() {
        //memberi penamaan pada kolom Jtabel
        model = new DefaultTableModel();
        jTable_Role.setModel(model);
        model.addColumn("Role ID");
        model.addColumn("Nama Role User");
        model.addColumn("Date Modify");
        model.addColumn("Date Create");
        datatotabel();
        AturKolom();

    }

    public void AturKolom() {
        TableColumn kolom;
        jTable_Role.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        kolom = jTable_Role.getColumnModel().getColumn(0);
        kolom.setPreferredWidth(75);
        kolom = jTable_Role.getColumnModel().getColumn(1);
        kolom.setPreferredWidth(200);
        kolom = jTable_Role.getColumnModel().getColumn(2);
        kolom.setPreferredWidth(150);
        kolom = jTable_Role.getColumnModel().getColumn(3);
        kolom.setPreferredWidth(150);
    }

    public void datatotabel() {
        //menghapus isi table tblGaji
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        try {
            //membuat statemen pemanggilan data pada table trole dari database
            Statement stat = (Statement) koneksiDB.Getkoneksi().createStatement();
            String sql = "select *from trole;";
            ResultSet rs = stat.executeQuery(sql);

            while (rs.next()) {
                Object[] fieldX = new Object[4];
                fieldX[0] = rs.getString("roleid");
                fieldX[1] = rs.getString("namarole");
                fieldX[2] = rs.getString("datecreate");
                fieldX[3] = rs.getString("datemodify");

                model.addRow(fieldX);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,
                    e.getMessage());
        }
    }

    public void HapusData() {
        rool_id = (model.getValueAt(jTable_Role.getSelectedRow(), 0) + "");

        try {
            Statement stat = (Statement) koneksiDB.Getkoneksi().createStatement();
            String sql = "delete from trole where roleid='" + rool_id + "'";
            stat.executeUpdate(sql);
            HeaderTable();
            jTextField_Role.requestFocus();
            jTextField_Role.setText("");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTable_role = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Role = new javax.swing.JTable();
        btn_simpan = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        btn_keluar = new javax.swing.JButton();
        jTextField_Role = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable_role.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTable_role.setText("Role User");

        jTable_Role.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_Role.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_RoleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Role);

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_keluar.setText("Keluar");
        btn_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keluarActionPerformed(evt);
            }
        });

        jTextField_Role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_RoleActionPerformed(evt);
            }
        });
        jTextField_Role.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_RoleKeyPressed(evt);
            }
        });

        jLabel1.setText("Nama Role");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addGap(41, 41, 41)
                        .addComponent(jTextField_Role, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_simpan)
                                .addGap(32, 32, 32)
                                .addComponent(btn_hapus)
                                .addGap(42, 42, 42)
                                .addComponent(btn_keluar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jTable_role, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jTable_role, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_Role, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_simpan)
                    .addComponent(btn_hapus)
                    .addComponent(btn_keluar))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_RoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RoleActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String rolename = jTextField_Role.getText();
        java.util.Date tanggal = new java.util.Date();
        java.text.SimpleDateFormat TanggalFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String CreateDate = TanggalFormat.format(tanggal);

        if (rolename.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Role Name Belum Diisi", "Peringatan", JOptionPane.WARNING_MESSAGE);
            jTextField_Role.requestFocus();
        } else {
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menyimpan data?",
                    "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    Statement StrU = koneksiDB.Getkoneksi().createStatement();
                    Statement StrI = koneksiDB.Getkoneksi().createStatement();
                    Statement Str = koneksiDB.Getkoneksi().createStatement();

                    if (!rool_id.equals("")) {
                        String sql = "select *from trole where namarole='" + rolename + "'";
                        ResultSet rs = Str.executeQuery(sql);

                        if (rs.next()) {
                            JOptionPane.showMessageDialog(null, "Nama Role ID Sudah Ada", "Peringatan", JOptionPane.INFORMATION_MESSAGE);
                            jTextField_Role.setText("");
                            jTextField_Role.requestFocus();
                        } else {
                            StrU.executeUpdate("update trole set datemodify='" + CreateDate + "',namarole='" + jTextField_Role.getText() + "' where roleid='" + rool_id + "'");
                            JOptionPane.showMessageDialog(null, "Data Sudah  Ubah", "Update", JOptionPane.INFORMATION_MESSAGE);
                            jTextField_Role.requestFocus();
                            HeaderTable();
                            rool_id = "";
                            jTextField_Role.setText("");
                            jTextField_Role.requestFocus();
                        }

                    } else {
                        String sql = "select *from trole where namarole='" + rolename + "'";
                        ResultSet rs = Str.executeQuery(sql);

                        if (rs.next()) {
                            JOptionPane.showMessageDialog(null, "Nama Role ID Sudah Di Ada", "Peringatan", JOptionPane.INFORMATION_MESSAGE);
                            jTextField_Role.setText("");
                            jTextField_Role.requestFocus();
                        } else {
                            StrI.executeUpdate("insert into trole(namarole,datecreate,datemodify)values('" + rolename + "','" + CreateDate + "','" + CreateDate + "')");
                            JOptionPane.showMessageDialog(null, "Data Sudah Di Simpan", "Insert", JOptionPane.INFORMATION_MESSAGE);
                            HeaderTable();
                            rool_id = "";
                            jTextField_Role.setText("");
                            jTextField_Role.requestFocus();
                        }
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Update atau Insert Gagal\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keluarActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin keluar?", "Konfirmasi keluar", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            dispose();

        }
    }//GEN-LAST:event_btn_keluarActionPerformed

    private void jTextField_RoleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_RoleKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // begin 
            btn_simpan.requestFocus();   //panggil komponen yang akan di tuju 
        }  //end if

    }//GEN-LAST:event_jTextField_RoleKeyPressed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        // TODO add your handling code here:
//        if (jTextField_Role.getText().isEmpty()) {
//            JOptionPane.showMessageDialog(null, "Role Name Yang akan di hapus Belum Di Isi");
//            jTextField_Role.requestFocus();
//        } else {
//            //isi dengan methode hapus data
//            int jawab = JOptionPane.showConfirmDialog(this, "Yakin Data Akan Di Hapus?");
//            switch (jawab) {
//                case JOptionPane.YES_OPTION:
//                    HapusData();
//                    JOptionPane.showMessageDialog(this, "Data Sudah Di Hapus");
//                    break;
//                case JOptionPane.NO_OPTION:
//                    JOptionPane.showMessageDialog(this, "Data Batal Di Hapus");
//                    break;
//            }
//
//        }

        String rolename = jTextField_Role.getText();

        if (rolename.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data?",
                "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Statement StrD = koneksiDB.Getkoneksi().createStatement();
                String sql = "DELETE FROM trole WHERE namarole='" + rolename + "'";
                int rowsDeleted = StrD.executeUpdate(sql);

                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Hapus", JOptionPane.INFORMATION_MESSAGE);
                    jTextField_Role.setText(""); // Kosongkan field setelah menghapus
                    HeaderTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
                }

                // Kosongkan JTextField setelah simpan
                jTextField_Role.setText("");
                jTextField_Role.requestFocus(); // Fokus kembali ke JTextField

                HeaderTable(); // Perbarui tampilan tabel

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void jTable_RoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_RoleMouseClicked
        // TODO add your handling code here:
        jTextField_Role.setText(model.getValueAt(jTable_Role.getSelectedRow(), 1) + "");
        rool_id = (model.getValueAt(jTable_Role.getSelectedRow(), 0) + "");

    }//GEN-LAST:event_jTable_RoleMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramRoleUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramRoleUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramRoleUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramRoleUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramRoleUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_keluar;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Role;
    private javax.swing.JLabel jTable_role;
    private javax.swing.JTextField jTextField_Role;
    // End of variables declaration//GEN-END:variables
}
